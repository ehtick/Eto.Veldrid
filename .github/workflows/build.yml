name: Build

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  release:
    types: [ published ]

env:
  BuildVersion: "CI.${{ github.run_id }}"
  BuildBranch: "${{ github.ref }}"
  DotNetVersion: '8.0.x'

jobs:
  build-mac:

    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup .NET Core
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DotNetVersion }}

      - name: Setup XCode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: latest-stable

      - name: Install macos workload
        run: dotnet workload install macos

      - name: Build
        run: dotnet build -m:1 -clp:NoSummary -c Release Eto.Veldrid.sln

      - name: Pack
        run: dotnet pack --no-build --no-restore -m:1 -clp:NoSummary -c Release Eto.Veldrid.sln

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: nuget
          path: artifacts/nuget/**/*.nupkg

  publish:
    needs: build-mac
    runs-on: ubuntu-latest
    if: github.event_name == 'release' && github.event.action == 'published'
    steps:
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DotNetVersion }}

      - name: Download NuGet Packages
        uses: actions/download-artifact@v4
        with:
          name: nuget

      - name: Push packages
        run: dotnet nuget push './**/*.nupkg' --skip-duplicate -s https://api.nuget.org/v3/index.json -k ${{secrets.NUGET_API_KEY}}
